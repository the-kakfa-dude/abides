/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'

    // sonar
    id 'jacoco'
    id 'org.sonarqube' version '2.8'

    // sonarqube server runs via docker-compose
    id 'com.avast.gradle.docker-compose' version '0.9.4'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application
    mainClassName = 'com.kakfa.App'
}

task sourcesJar(type: Jar) {

    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task uberJar(type: Jar) {

    archiveClassifier = 'uber'

    from sourceSets.main.output
    from sourceSets.test.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

dockerCompose {
    useComposeFiles = ['docker/sonar/docker-compose.yaml']
    containerLogToDir = project.file('sonar')
    removeVolumes = false
}

task testReport(type: JacocoReport) {

    sourceDirectories.from = files(["${project.projectDir}/src/main/java"])
    classDirectories.from = files(["$buildDir/classes/java/main/"])

    executionData fileTree(dir: "$buildDir", includes: ["jacoco/funcTest.exec", "jacoco/test.exec"])

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/report.xml")
    }
}

sonarqube {
    properties {	
        property 'sonar.projectName', 'java_sonar'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/report.xml"
    }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8' 

tasks.check.dependsOn uberJar
tasks.check.dependsOn testReport

tasks.sonarqube.dependsOn = []

